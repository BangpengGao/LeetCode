package com.leetcode;
/*
 * @ Description
 * @ Author Bangpeng Gao
 * @ Version 1.0.0
 * @ Since 1.0.0
 * @ Date 2019/7/25
 */

import java.util.HashMap;
import java.util.Map;

public class FindTheDifference {

    /**
     * 389. Find the Difference
     * Easy
     * Given two strings s and t which consist of only lowercase letters.
     * String t is generated by random shuffling string s and then add one more letter at a random position.
     * Find the letter that was added in t.
     * <p>
     * Example:
     * Input:
     * s = "abcd"
     * t = "abcde"
     * Output:
     * e
     * <p>
     * Explanation:
     * 'e' is the letter that was added.
     */
    public char solution(String s, String t) {
        Map<Character, Integer> sMap = new HashMap<>();
        Map<Character, Integer> tMap = new HashMap<>();
        char res = 0;
        for (int i = 0; i < s.length(); i++) {
            if (sMap.containsKey(s.charAt(i))) {
                int sTemp = sMap.get(s.charAt(i));
                sMap.put(s.charAt(i), sTemp+1);
            } else {
                sMap.put(s.charAt(i), 1);
            }
            if (tMap.containsKey(t.charAt(i))) {
                int sTemp = tMap.get(t.charAt(i));
                tMap.put(t.charAt(i), sTemp+1);
            } else {
                tMap.put(t.charAt(i), 1);
            }
        }

        if (tMap.containsKey(t.charAt(t.length() - 1))) {
            int sTemp = tMap.get(t.charAt(t.length() - 1));
            tMap.put(t.charAt(t.length() - 1), sTemp+1);
        } else {
            tMap.put(t.charAt(t.length() - 1), 1);
        }

        for (Map.Entry<Character, Integer> entry : tMap.entrySet()) {
            if (sMap.containsKey(entry.getKey()) && sMap.get(entry.getKey()).intValue() != entry.getValue()) {
                res = entry.getKey();
                break;
            }
            if (!sMap.containsKey(entry.getKey())) {
                res = entry.getKey();
                break;
            }
        }
        return res;
    }

    public char solution2(String s, String t) {
        int n = t.length();
        char c = t.charAt(n - 1);
        for (int i = 0; i < n - 1; ++i) {
            c ^= s.charAt(i);
            c ^= t.charAt(i);
        }
        return c;
    }

    public static void main(String[] arg){
        FindTheDifference findTheDifference = new FindTheDifference();
        System.out.println(findTheDifference.solution("a", "aa"));
    }

}
